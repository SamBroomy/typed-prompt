name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write


jobs:
  lint:
    name: Lint Codebase
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Super-Linter
        uses: super-linter/super-linter/slim@v7.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FIX_PYTHON_RUFF: true
          FIX_YAML_PRETTIER: true

      - name: Commit and Push Lint Fixes
        if: github.event_name == 'pull_request'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: ${{ github.head_ref }}
          commit_message: "chore: fix linting issues"
          commit_user_name: super-linter
          commit_user_email: super-linter@super-linter.dev

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4

      - name: Install uv with Caching
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          uv sync --dev

      - name: Run Tests with Coverage
        run: |
          uv run pytest --cov-report=xml

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

      - name: Minimize uv Cache
        run: uv cache prune --ci

  publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Install uv with Caching
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Bump Version, Build, Publish
        run: uvx --from rust-just just publish-package

      - name: Minimize uv Cache
        run: uv cache prune --ci
